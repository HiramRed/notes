数据库设计的范式
    * 设计数据库时，需要遵循一些规范。要遵循后边的范式要求，必须先遵循前边的所有范式要求

    * 数据库概念
	* 实体
	    现实世界中客观存在并可以被区别的事物。比如“一个学生”、“一本书”、“一门课”等等。
	    值得强调的是这里所说的“事物”不仅仅是看得见摸得着的“东西”，它也可以是虚拟的，不如说“老师与学校的关系”。

	* 属性
	    教科书上解释为：“实体所具有的某一特性”，由此可见，属性一开始是个逻辑概念，比如说，
 	    “性别”是“人”的一个属性。在关系数据库中，属性又是个物理概念，属性可以看作是“表的一列”。

	* 元组
	    表中的一行就是一个元组。

	* 分量
	    元组的某个属性值。在一个关系数据库中，它是一个操作原子，即关系数据库在做任何操作的时候，
	    属性是“不可分的”。否则就不是关系数据库了。

	* 码
	    表中可以唯一确定一个元组的某个属性（或者属性组），如果这样的码有不止一个，那么大家都叫候选码，
	    我们从候选码中挑一个出来做老大，它就叫主码。

	* 全码
	    如果一个码包含了所有的属性，这个码就是全码。

	* 主属性
	    一个属性只要在任何一个候选码中出现过，这个属性就是主属性。

	* 非主属性
	    与上面相反，没有在任何候选码中出现过，这个属性就是非主属性。

	* 外码
	    一个属性（或属性组），它不是码，但是它别的表的码，它就是外码。

	* 候选码
	     若关系中的某一属性或属性组的值能唯一的标识一个元组，而其任何真子集都不能再标识，则称该属性组为（超级码）候选码。


    * 范式

	设计关系数据库时，遵循不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被成为不同的范式，
	各种范式呈递次规范，越高的范式数据库冗余越小。
	目前关系数据库有六种规范：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、
	第四范式（4NF）和 第五范式（5NF，又称完美范式）。


    * 分类：
	* 第一范式（1NF）：每一列都是不可分割的原子数据项

	* 第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）
	    * 几个概念
		* 函数依赖：A -- > B，如果通过A属性（候选码）的值，可以确定唯一B属性的值。则称B依赖于A

		* 完全函数依赖：A -- > B，如果A是一个候选码，则B属性值得确定需要依赖于A候选码中所有的属性值

		* 部分函数依赖：A -- > B，若果A是一个候选码，则B属性值得确定只需要依赖于A候选码中某一个（些）属性值即可

		* 传递函数依赖：A -- > B，B -- > C，如果通过A属性（候选码）的值，可以确定唯一B属性的值，
		  再通过B属性（候选码）的值可以确定唯一C属性的值，则称C传递函数依赖于A
		
	* 第三范式（3NF）：在2NF的基础上，任何非主属性不依赖于其他非主属性（在2NF）基础上消除传递依赖

	* 巴斯-科德范式（BCNF）：在3NF基础上，任何非主属性不能对主键子集依赖（在3NF基础上消除对主码子集的依赖）

	* 第四范式（4NF）：要求把同一表内的多对多关系删除。

	* 第五范式（5NF）：从最终结构重新建立原始结构。
